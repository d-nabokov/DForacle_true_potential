Setting QOS class to user-interactive
Theory suggest that the minimum number of calls is 1674.1539623687893
Kyber-oracle server ready on 127.0.0.1:3334, waiting for Rustâ€¦
Rust oracle connected from ('127.0.0.1', 64479)
rand_mask=b'(\x95\xe4\x86\x10n=-'
masked_addr=b'(QA%\x11n=-'
target_addr=00c4a5a301000000
lowest_message_bit=14
key 0
1: expect=-1, actual=np.int64(-2), [0.000, 0.902, 0.098, 0.000, 0.000, 0.000, 0.000], checks for var: 19
2: expect=0, actual=np.int64(1), [0.000, 0.000, 0.000, 0.004, 0.992, 0.004, 0.000], checks for var: 18
9: expect=0, actual=np.int64(-2), [0.019, 0.640, 0.146, 0.189, 0.005, 0.000, 0.000], checks for var: 20
23: expect=-2, actual=np.int64(-3), [0.776, 0.221, 0.003, 0.000, 0.000, 0.000, 0.000], checks for var: 19
27: expect=1, actual=np.int64(2), [0.000, 0.000, 0.000, 0.004, 0.180, 0.809, 0.008], checks for var: 20
28: expect=1, actual=np.int64(0), [0.000, 0.000, 0.000, 0.961, 0.037, 0.002, 0.000], checks for var: 19
41: expect=-3, actual=np.int64(-1), [0.001, 0.002, 0.974, 0.023, 0.000, 0.000, 0.000], checks for var: 19
42: expect=0, actual=np.int64(-1), [0.000, 0.000, 0.505, 0.495, 0.000, 0.000, 0.000], checks for var: 18
44: expect=1, actual=np.int64(0), [0.000, 0.024, 0.011, 0.494, 0.471, 0.000, 0.000], checks for var: 18
45: expect=1, actual=np.int64(0), [0.000, 0.000, 0.000, 0.755, 0.245, 0.000, 0.000], checks for var: 19
46: expect=0, actual=np.int64(-1), [0.000, 0.000, 0.993, 0.007, 0.000, 0.000, 0.000], checks for var: 19
51: expect=-2, actual=np.int64(-1), [0.000, 0.010, 0.990, 0.000, 0.000, 0.000, 0.000], checks for var: 19
52: expect=0, actual=np.int64(-1), [0.000, 0.002, 0.652, 0.346, 0.000, 0.000, 0.000], checks for var: 19
63: expect=1, actual=np.int64(0), [0.000, 0.000, 0.000, 0.995, 0.004, 0.001, 0.000], checks for var: 17
71: expect=1, actual=np.int64(0), [0.000, 0.000, 0.000, 0.971, 0.021, 0.008, 0.000], checks for var: 19
72: expect=-1, actual=np.int64(-2), [0.012, 0.641, 0.348, 0.000, 0.000, 0.000, 0.000], checks for var: 20
76: expect=0, actual=np.int64(1), [0.000, 0.000, 0.000, 0.201, 0.789, 0.010, 0.000], checks for var: 20
78: expect=-1, actual=np.int64(1), [0.000, 0.009, 0.052, 0.157, 0.756, 0.026, 0.000], checks for var: 19
86: expect=0, actual=np.int64(-1), [0.000, 0.062, 0.922, 0.016, 0.000, 0.000, 0.000], checks for var: 19
91: expect=2, actual=np.int64(3), [0.000, 0.000, 0.000, 0.000, 0.000, 0.275, 0.725], checks for var: 19
103: expect=0, actual=np.int64(-1), [0.000, 0.000, 0.751, 0.249, 0.000, 0.000, 0.000], checks for var: 20
115: expect=1, actual=np.int64(2), [0.000, 0.000, 0.000, 0.000, 0.130, 0.870, 0.000], checks for var: 19
124: expect=0, actual=np.int64(1), [0.001, 0.006, 0.010, 0.120, 0.863, 0.000, 0.000], checks for var: 19
130: expect=-1, actual=np.int64(-2), [0.003, 0.996, 0.000, 0.000, 0.000, 0.000, 0.000], checks for var: 19
145: expect=0, actual=np.int64(-1), [0.000, 0.000, 0.980, 0.009, 0.000, 0.008, 0.001], checks for var: 19
146: expect=0, actual=np.int64(-1), [0.000, 0.005, 0.991, 0.000, 0.003, 0.000, 0.000], checks for var: 17
147: expect=-1, actual=np.int64(-2), [0.001, 0.999, 0.000, 0.000, 0.000, 0.000, 0.000], checks for var: 19
148: expect=-2, actual=np.int64(1), [0.000, 0.000, 0.004, 0.000, 0.996, 0.000, 0.000], checks for var: 19
149: expect=2, actual=np.int64(3), [0.000, 0.000, 0.000, 0.000, 0.000, 0.056, 0.944], checks for var: 20
154: expect=0, actual=np.int64(-1), [0.000, 0.000, 0.641, 0.359, 0.000, 0.000, 0.000], checks for var: 18
160: expect=-1, actual=np.int64(0), [0.000, 0.001, 0.030, 0.968, 0.001, 0.000, 0.000], checks for var: 19
166: expect=2, actual=np.int64(1), [0.000, 0.000, 0.000, 0.003, 0.812, 0.172, 0.013], checks for var: 19
176: expect=0, actual=np.int64(1), [0.000, 0.000, 0.000, 0.209, 0.791, 0.000, 0.000], checks for var: 20
187: expect=1, actual=np.int64(0), [0.000, 0.000, 0.000, 0.999, 0.001, 0.000, 0.000], checks for var: 17
188: expect=0, actual=np.int64(1), [0.000, 0.000, 0.000, 0.058, 0.937, 0.005, 0.000], checks for var: 18
189: expect=1, actual=np.int64(0), [0.000, 0.000, 0.002, 0.940, 0.052, 0.006, 0.000], checks for var: 19
190: expect=0, actual=np.int64(-1), [0.000, 0.000, 0.995, 0.005, 0.000, 0.000, 0.000], checks for var: 19
191: expect=1, actual=np.int64(3), [0.000, 0.000, 0.000, 0.000, 0.001, 0.370, 0.629], checks for var: 18
204: expect=0, actual=np.int64(-1), [0.000, 0.000, 0.982, 0.018, 0.000, 0.000, 0.000], checks for var: 17
206: expect=-2, actual=np.int64(-1), [0.000, 0.003, 0.996, 0.001, 0.000, 0.000, 0.000], checks for var: 19
209: expect=1, actual=np.int64(0), [0.000, 0.012, 0.004, 0.957, 0.026, 0.001, 0.000], checks for var: 20
210: expect=0, actual=np.int64(1), [0.000, 0.000, 0.000, 0.010, 0.989, 0.001, 0.000], checks for var: 18
236: expect=0, actual=np.int64(1), [0.000, 0.000, 0.002, 0.489, 0.508, 0.000, 0.000], checks for var: 19
239: expect=-2, actual=np.int64(-1), [0.000, 0.007, 0.861, 0.124, 0.008, 0.000, 0.000], checks for var: 19
254: expect=0, actual=np.int64(1), [0.000, 0.000, 0.002, 0.025, 0.973, 0.000, 0.000], checks for var: 20
262: expect=-1, actual=np.int64(-2), [0.052, 0.948, 0.000, 0.000, 0.000, 0.000, 0.000], checks for var: 19
280: expect=0, actual=np.int64(-1), [0.020, 0.075, 0.770, 0.124, 0.009, 0.002, 0.000], checks for var: 19
295: expect=1, actual=np.int64(2), [0.000, 0.000, 0.000, 0.000, 0.488, 0.511, 0.000], checks for var: 20
305: expect=-2, actual=np.int64(-3), [0.822, 0.178, 0.000, 0.000, 0.000, 0.000, 0.000], checks for var: 19
307: expect=-1, actual=np.int64(-2), [0.204, 0.627, 0.169, 0.000, 0.000, 0.000, 0.000], checks for var: 19
308: expect=0, actual=np.int64(1), [0.000, 0.000, 0.000, 0.219, 0.708, 0.071, 0.002], checks for var: 20
313: expect=-1, actual=np.int64(-3), [1.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000], checks for var: 19
321: expect=2, actual=np.int64(3), [0.000, 0.000, 0.000, 0.000, 0.002, 0.365, 0.634], checks for var: 18
326: expect=-2, actual=np.int64(-3), [0.873, 0.127, 0.000, 0.000, 0.000, 0.000, 0.000], checks for var: 19
331: expect=-1, actual=np.int64(-2), [0.069, 0.818, 0.113, 0.000, 0.000, 0.000, 0.000], checks for var: 19
334: expect=-2, actual=np.int64(-3), [0.835, 0.162, 0.003, 0.000, 0.000, 0.000, 0.000], checks for var: 18
336: expect=0, actual=np.int64(-1), [0.000, 0.003, 0.744, 0.254, 0.000, 0.000, 0.000], checks for var: 19
339: expect=0, actual=np.int64(1), [0.000, 0.000, 0.000, 0.020, 0.977, 0.003, 0.000], checks for var: 19
344: expect=-1, actual=np.int64(0), [0.000, 0.000, 0.004, 0.958, 0.039, 0.000, 0.000], checks for var: 19
345: expect=0, actual=np.int64(1), [0.000, 0.000, 0.000, 0.307, 0.693, 0.000, 0.000], checks for var: 19
360: expect=-2, actual=np.int64(-3), [0.930, 0.070, 0.000, 0.000, 0.000, 0.000, 0.000], checks for var: 20
361: expect=-1, actual=np.int64(1), [0.000, 0.000, 0.086, 0.200, 0.691, 0.022, 0.000], checks for var: 20
362: expect=-1, actual=np.int64(0), [0.000, 0.000, 0.005, 0.995, 0.000, 0.000, 0.000], checks for var: 19
377: expect=0, actual=np.int64(-1), [0.020, 0.029, 0.942, 0.004, 0.004, 0.000, 0.000], checks for var: 18
384: expect=-1, actual=np.int64(1), [0.000, 0.007, 0.120, 0.069, 0.801, 0.002, 0.000], checks for var: 18
388: expect=2, actual=np.int64(1), [0.000, 0.000, 0.000, 0.061, 0.864, 0.070, 0.004], checks for var: 18
395: expect=2, actual=np.int64(3), [0.000, 0.000, 0.000, 0.000, 0.001, 0.244, 0.755], checks for var: 20
396: expect=-1, actual=np.int64(-2), [0.018, 0.834, 0.110, 0.038, 0.000, 0.000, 0.000], checks for var: 19
400: expect=0, actual=np.int64(1), [0.000, 0.000, 0.000, 0.274, 0.721, 0.005, 0.001], checks for var: 18
403: expect=-1, actual=np.int64(-2), [0.000, 0.958, 0.042, 0.000, 0.000, 0.000, 0.000], checks for var: 19
404: expect=-1, actual=np.int64(0), [0.000, 0.009, 0.015, 0.973, 0.002, 0.000, 0.000], checks for var: 18
415: expect=-1, actual=np.int64(-2), [0.006, 0.993, 0.001, 0.000, 0.000, 0.000, 0.000], checks for var: 18
430: expect=-1, actual=np.int64(-2), [0.000, 0.728, 0.272, 0.000, 0.000, 0.000, 0.000], checks for var: 19
432: expect=0, actual=np.int64(-1), [0.000, 0.029, 0.906, 0.058, 0.005, 0.002, 0.000], checks for var: 20
443: expect=-1, actual=np.int64(-2), [0.000, 0.854, 0.146, 0.000, 0.000, 0.000, 0.000], checks for var: 18
450: expect=1, actual=np.int64(2), [0.003, 0.092, 0.039, 0.008, 0.342, 0.517, 0.000], checks for var: 20
451: expect=2, actual=np.int64(1), [0.000, 0.004, 0.022, 0.011, 0.491, 0.470, 0.002], checks for var: 20
478: expect=2, actual=np.int64(1), [0.000, 0.000, 0.000, 0.000, 0.910, 0.090, 0.000], checks for var: 19
483: expect=0, actual=np.int64(-1), [0.005, 0.031, 0.502, 0.390, 0.070, 0.002, 0.000], checks for var: 19
495: expect=1, actual=np.int64(0), [0.000, 0.000, 0.000, 0.945, 0.055, 0.000, 0.000], checks for var: 17
497: expect=0, actual=np.int64(-1), [0.000, 0.000, 0.860, 0.131, 0.008, 0.000, 0.000], checks for var: 19
503: expect=1, actual=np.int64(0), [0.000, 0.000, 0.000, 0.984, 0.015, 0.001, 0.000], checks for var: 19
506: expect=1, actual=np.int64(-1), [0.000, 0.000, 0.992, 0.004, 0.002, 0.001, 0.001], checks for var: 19
507: expect=0, actual=np.int64(3), [0.000, 0.000, 0.000, 0.097, 0.137, 0.067, 0.699], checks for var: 19
Real number of measurements used = 11284
Average number of incorrect coefficients = 84.0
Difference array: [84]
Average oracle calls used = 3131.0
Timing information (per key) in ms
---- conditional pmf computation 0
---- LDPC decoder 85404.44775
---- LDPC decoder during batches 76319.117916
---- Base case handling (everything) 19616.696292
---- Computation of marginals for base 288.842916
---- Enumerating promising directions 58616.957603
---- Total time spend in batches 277158.850333
Number of correct oracle calls is 2576 out of 3131 leading to empirical accuracy 0.8227
y_statistic=defaultdict(<class 'int'>, {1: 1347, 0: 888})
